
worker_processes 2;

error_log logs/error.log info;

events {
  accept_mutex off;
  worker_connections 1024;
}

http {
  include datanet_shared_memory_tables.conf;

  init_by_lua_block {
     local cfdir = "/home/sammy/node_modules/zync/nginx/TWO/nginx/conf/";
     local dinfo = ngx.shared.DATANET_INFO;
     dinfo:set("ConfigDirectory", cfdir);
     require "datanet.init";
  }

  init_worker_by_lua_file ./lua/init_worker.lua;

  server {
    listen 8081;
    listen 4001 ssl;

    server_name         frontend1.mydomain.com;
    ssl_certificate     ./ssl/nginx.crt;
    ssl_certificate_key ./ssl/nginx.key;

    set_by_lua_block $RequestUUID {
      return uuid4.getUUID();
    }

    location / {
      content_by_lua 'ngx.say("404");';
    }

    # STICKY PROCESS ROUTING
    location /sticky/ {
      proxy_pass http://backend/sticky/;
    }

    # USER SCRIPTS
    location /station {
      content_by_lua_file ./locations/station.lua;
    }
    location /subscribe {
      content_by_lua_file ./locations/subscribe.lua;
    }
    location /store {
      content_by_lua_file ./locations/store.lua;
    }
    location /commit {
      content_by_lua_file ./locations/commit.lua;
    }
    location /remove {
      content_by_lua_file ./locations/remove.lua;
    }
    location /cache {
      content_by_lua_file ./locations/cache.lua;
    }
    location /heartbeat {
      content_by_lua_file ./locations/heartbeat.lua;
    }
    location /isolation {
      content_by_lua_file ./locations/isolation.lua;
    }

    # TEST SCRIPTS
    location /test {
      content_by_lua_file ./locations/test.lua;
    }
    location /test2 {
      content_by_lua_file ./locations/test2.lua;
    }
  }

  # STICKY PROCESS INTERNALS
  server {
    listen unix:/tmp/sticky_nginx_socket_;

    set_by_lua_block $RequestUUID {
      return uuid4.getUUID();
    }

    log_by_lua_file ./lua/log.lua;

    # AGENT URL
    location /__agent {
      content_by_lua_file ./locations/agent.lua;
      more_set_headers "Access-Control-Allow-Origin: *";
    }

    location /sticky/__debug {
      content_by_lua_file ./locations/debug.lua;
    }
    location /sticky/userinfo {
      content_by_lua_file ./locations/userinfo.lua;
    }
  }

  upstream backend {
    server 0.0.0.1;  # PLACEHOLDER
    balancer_by_lua_file ./lua/sticky_balancer.lua;
  }

  # CLUSTER: STICKY MACHINE
  server {
    listen 9081 ssl;

    server_name         cluster1.mydomain.com;
    ssl_certificate     ./ssl/nginx.crt;
    ssl_certificate_key ./ssl/nginx.key;

    location /__cluster {
      content_by_lua_file ./locations/handle_cluster.lua;
    }
  }

  # CENTRAL CALLBACK SERVER
  server {
    listen 10081 ssl;

    server_name         agent1.mydomain.com;
    ssl_certificate     ./ssl/nginx.crt;
    ssl_certificate_key ./ssl/nginx.key;
    
    location /subscriber {
      content_by_lua_file ./locations/subscriber.lua;
    }
  }
}
