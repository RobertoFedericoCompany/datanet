
worker_processes 1;

error_log logs/error.log info;

events {
  accept_mutex off;
  worker_connections 1024;
}

http {
  resolver 127.0.0.1;

  include datanet_shared_memory_tables.conf;

  init_by_lua_block {
     local conf_dname = "/usr/local/datanet/conf/";
     local conf_fname = "two_datanet_config";
     local dinfo      = ngx.shared.DATANET_INFO;
     dinfo:set("ConfigDirectory", conf_dname);
     dinfo:set("ConfigFile",      conf_fname);
     require("datanet.init");
  }

  init_worker_by_lua_file /usr/local/openresty/lualib/datanet/init_worker.lua;

  server {
    listen 8081     so_keepalive=2s:2s:8;
    listen 4001 ssl so_keepalive=2s:2s:8;

    server_name         frontend2.mydomain.com;
    ssl_certificate     ./ssl/nginx.crt;
    ssl_certificate_key ./ssl/nginx.key;

    set_by_lua_file $RequestUUID ./conf/datanet_per_request_set_by_lua;

    location / {
      content_by_lua 'ngx.say("404");';
    }

    # UNIT TEST
    include datanet_test_locations.conf;
  }

  # INTERNAL ROUTING SERVER
  include datanet_internal_server.conf;

  # CENTRAL CALLBACK SERVER
  include two_callback_server.conf;
}
