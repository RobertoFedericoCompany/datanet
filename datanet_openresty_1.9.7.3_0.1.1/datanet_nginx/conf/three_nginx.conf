
worker_processes 4;

error_log logs/error.log info;

events {
  accept_mutex off;
  worker_connections 1024;
}

http {
  resolver 127.0.0.1;

  include datanet_shared_memory_tables.conf;

  init_by_lua_block {
     cjson        = require "cjson";
     local dinfo  = ngx.shared.DATANET_INFO;
     local config = {
        name    = "SERVER_3",
        central = {
          name     = "D1",
          https    = {
            hostname = "127.0.0.1",
            port     = 10101
          },
          callback = {
            hostname = "127.0.0.1",
            port     = 10082,
            key      = "UNIQUE KEY PER AGENT 3"
          },
         },
         log = {
           level = "TRACE"
         },
         default = {
           log_configuration_file = "./conf/three_easylogging.conf",
           ldb_data_directory     = "./THREE/LDB/";
         }
        };
     local jconf = cjson.encode(config);
     dinfo:set("Config", jconf);
     require("datanet.init");
  }

  init_worker_by_lua_file /usr/local/openresty/lualib/datanet/init_worker.lua;

  server {
    listen 8082 so_keepalive=2s:2s:8;
    listen 4002 ssl so_keepalive=2s:2s:8;

    server_name         frontend3.mydomain.com;
    ssl_certificate     ./ssl/nginx.crt;
    ssl_certificate_key ./ssl/nginx.key;

    set_by_lua_file $RequestUUID ./conf/datanet_per_request_set_by_lua;

    location / {
      content_by_lua 'ngx.say("404");';
    }

    # UNIT TEST
    include datanet_test_locations.conf;
  }

  # STICKY PROCESS INTERNALS
  server {
    listen unix:/tmp/sticky_nginx_socket_;

    set_by_lua_file $RequestUUID ./conf/datanet_per_request_set_by_lua;

    log_by_lua_file /usr/local/openresty/lualib/datanet/log.lua;

    # MAIN()
    location /agent {
      content_by_lua_file ./locations/agent.lua;
      more_set_headers "Access-Control-Allow-Origin: *";
    }
  }

  upstream backend {
    server 0.0.0.1;  # PLACEHOLDER
    balancer_by_lua_file /usr/local/openresty/lualib/datanet/sticky_balancer.lua;
  }

  # CENTRAL CALLBACK SERVER
  server {
    listen 10082 ssl so_keepalive=2s:2s:8;

    server_name         agent0.mydomain.com;
    ssl_certificate     ./ssl/nginx.crt;
    ssl_certificate_key ./ssl/nginx.key;

    location /subscriber {
      content_by_lua_file ./locations/subscriber.lua;
    }
  }

}
